CC=emcc
# A few notes on the options:
#
# -s PRECISE_F32=1 is needed because of a strange bug involving the assignments 
#           of floats. Actually asm.js uses doubles for most computation, 
#           this flags ensure a behavoiur more similar to the expected one.
# --bind    needed for exporting the functions from cpp to js.
# -s DEMANGLE_SUPPORT=1 More consistent naming of the cpp functions is preserved 
#           in asm.js. Useful for cpp stacktrace inside the browser. 

CFLAGS=-I.  -I ../include/  -s TOTAL_MEMORY=536870912 -s PRECISE_F32=1 -s DEMANGLE_SUPPORT=1 -O3  --bind -s ASSERTIONS=1
//CFLAGS=-I.  -I ../../vcglib/  -s ALLOW_MEMORY_GROWTH=1 -s PRECISE_F32=1 -s DEMANGLE_SUPPORT=1 -O3  --bind

OBJ = muParser.bc muParserBase.bc muParserBytecode.bc muParserCallback.bc \
      muParserDLL.bc muParserError.bc \
      muParserInt.bc muParserTokenReader.bc

%.bc: %.cpp
	$(CC) -c -o $@ $< $(CFLAGS)

muParserLib.bc: $(OBJ)
	$(CC) -o $@ $^ $(CFLAGS)
	mv muParserLib.bc ../../../lib


clean:
	rm -f *.bc 
